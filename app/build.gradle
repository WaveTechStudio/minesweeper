apply plugin: 'com.android.application'

// Project properties
def credentialsProperties = new Properties()
credentialsProperties.load(new FileInputStream("$rootDir/credentials.properties"))

// Release credentials properties.  E.g., keystore credentials.
def releaseCredentialsFilePath = credentialsProperties['releaseCredentialsFilePath']

if(file(releaseCredentialsFilePath).exists()) {
    // Load keystore credentials.
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(releaseCredentialsFilePath))

    android {
        signingConfigs {
            release {
                storeFile file(keystoreProperties['keystoreFile'])
                storePassword keystoreProperties['keystorePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    }
}

def generateVersionCode() {
    try {
        def output = new ByteArrayOutputStream()

        exec {
            // Count commits in current branch.
            commandLine "git", "rev-list", "HEAD", "--count"
            standardOutput = output
        }

        return output.toString().trim() as int
    }
    catch(exception) {
        return -1
    }
}

def generateVersionName() {
    try {
        def output = new ByteArrayOutputStream()

        exec {
            // Get latest tag name.
            commandLine "git", "describe", "--tags", "--abbrev=0"
            standardOutput = output
        }

        return output.toString().trim()
    }
    catch(exception) {
        return null
    }
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.orangemako.minesweeper"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode generateVersionCode()
        versionName generateVersionName()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.all {

            // set heap size for the test JVM(s)
            minHeapSize = "128m"
            maxHeapSize = "512m"

            // JVM args for the test JVM(s)
            jvmArgs '-XX:MaxPermSize=256m'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'

    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.squareup:otto:1.3.8'

    testCompile 'junit:junit:4.12'
}
